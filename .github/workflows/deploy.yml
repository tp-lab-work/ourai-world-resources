# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Generate Markdown files before generating the sidebar
      - name: Generate Markdown files
        run: |
          mkdir -p public/Poster
          # PNGファイルをMarkdownファイルとして生成
          for file in public/Poster/*.png; do
            base=$(basename "$file" .png)
            echo "# $base" > "public/Poster/$base.md"
            echo "![${base}]($base.png)" >> "public/Poster/$base.md"
          done

      # Generate Markdown files from JSON data
      - name: Generate Markdown files from JSON
        run: |
          mkdir -p public/Data
          # JSONファイルを読み込んでMarkdownファイルを生成
          for file in public/Data/*.json; do
            base=$(basename "$file" .json)
            echo "# $base" > "public/Data/$base.md"
            echo "```json" >> "public/Data/$base.md"
            cat $file >> "public/Data/$base.md"
            echo "```" >> "public/Data/$base.md"
          done

      - name: Generate sidebar
        run: bash ./scripts/generate_sidebar.sh
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "./public"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
